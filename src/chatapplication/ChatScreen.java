/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package chatapplication;

import static chatapplication.ChatScreen.recentChatMainPanel;
import static chatapplication.ServerListener.convertBytes;
import java.awt.BorderLayout;
import java.io.*;
import java.net.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.FileDialog;
import java.awt.FlowLayout;
import java.awt.Font;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javafx.scene.control.ProgressBar;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;

/**
 *
 * @author manib
 */
public class ChatScreen extends javax.swing.JFrame {

    /**
     * Creates new form ChatScreen
     */
    public ChatScreen(String userName) {
        ChatScreen.userName = userName;
        ChatScreen.contactList = new HashSet<>();

        try {
            socket = new Socket("127.0.0.1", 8761);
            serverOut = new PrintWriter(socket.getOutputStream(), true);
            serverOut.println(userName);

        } catch (IOException e) {
            e.printStackTrace();

        }
        initComponents();
        loggedInUserLabel.setText(" " + userName);
        cancelToggleBtn.setVisible(false);
        initializeClients();

        currentChatBodyPanel.setVisible(false);
        currentChatHeader.setVisible(false);
        currentChatLabel.setVisible(false);
        currentChatTxt.setVisible(false);
        sendButton.setVisible(false);
        fileSelectButton.setVisible(false);
        chatPanel.setLayout(new BoxLayout(chatPanel, BoxLayout.Y_AXIS));
    }

    private void initializeClients() {
        serverOut.println(XMLHandler.createXML(userName, "server", "contactsRetrieval", ""));
        Thread serverListenerThread = new Thread(new ServerListener(socket, chatPanel, recentChatMainPanel, recentChatScrollPane, this, currentChatBodyPanel));
        serverListenerThread.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        recentChatScrollPane = new javax.swing.JScrollPane();
        recentChatMainPanel = new javax.swing.JPanel();
        recentChatPanel = new javax.swing.JPanel();
        recentChatLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        currentChatHeader = new javax.swing.JPanel();
        currentChatLabel = new javax.swing.JLabel();
        currentChatBodyPanel = new javax.swing.JScrollPane();
        chatPanel = new javax.swing.JPanel();
        currentChatTxt = new javax.swing.JTextField();
        fileSelectButton = new javax.swing.JLabel();
        sendButton = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        newChatTxt = new javax.swing.JTextField();
        newChatSeparator = new javax.swing.JSeparator();
        jPanel8 = new javax.swing.JPanel();
        chatsLabel = new javax.swing.JLabel();
        cancelToggleBtn = new javax.swing.JLabel();
        loggedInUserLabel = new javax.swing.JLabel();
        logoutLabel = new javax.swing.JLabel();

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new Color(47, 49, 54));

        recentChatScrollPane.setBackground(new Color(47, 49, 54));
        recentChatScrollPane.setBorder(null);
        recentChatScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        recentChatScrollPane.setHorizontalScrollBar(null);

        recentChatMainPanel.setBackground(new Color(47, 49, 54)
        );

        recentChatPanel.setBackground(new java.awt.Color(255, 255, 255));

        recentChatLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        recentChatLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        recentChatLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chatapplication/chatMessageUserLogo.png"))); // NOI18N
        recentChatLabel.setText("Manish Ghindwani");
        recentChatLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        recentChatLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                recentChatLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout recentChatPanelLayout = new javax.swing.GroupLayout(recentChatPanel);
        recentChatPanel.setLayout(recentChatPanelLayout);
        recentChatPanelLayout.setHorizontalGroup(
            recentChatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, recentChatPanelLayout.createSequentialGroup()
                .addGap(0, 31, Short.MAX_VALUE)
                .addComponent(recentChatLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        recentChatPanelLayout.setVerticalGroup(
            recentChatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recentChatPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(recentChatLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout recentChatMainPanelLayout = new javax.swing.GroupLayout(recentChatMainPanel);
        recentChatMainPanel.setLayout(recentChatMainPanelLayout);
        recentChatMainPanelLayout.setHorizontalGroup(
            recentChatMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(recentChatPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        recentChatMainPanelLayout.setVerticalGroup(
            recentChatMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recentChatMainPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(recentChatPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(704, Short.MAX_VALUE))
        );

        recentChatScrollPane.setViewportView(recentChatMainPanel);

        jPanel4.setBackground(new Color(54, 57, 63));

        currentChatHeader.setBackground(new Color(47, 49, 54));

        currentChatLabel.setBackground(new Color(47, 49, 54));
        currentChatLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        currentChatLabel.setForeground(new java.awt.Color(255, 255, 255));
        currentChatLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        currentChatLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chatapplication/chatMessageUserLogo.png"))); // NOI18N
        currentChatLabel.setText("Manish Ghindwani");
        currentChatLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout currentChatHeaderLayout = new javax.swing.GroupLayout(currentChatHeader);
        currentChatHeader.setLayout(currentChatHeaderLayout);
        currentChatHeaderLayout.setHorizontalGroup(
            currentChatHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(currentChatLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        currentChatHeaderLayout.setVerticalGroup(
            currentChatHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(currentChatHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(currentChatLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        currentChatBodyPanel.setBackground(new Color(54, 57, 63));
        currentChatBodyPanel.setBorder(null);
        currentChatBodyPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        currentChatBodyPanel.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        chatPanel.setBackground(new Color(54, 57, 63));

        javax.swing.GroupLayout chatPanelLayout = new javax.swing.GroupLayout(chatPanel);
        chatPanel.setLayout(chatPanelLayout);
        chatPanelLayout.setHorizontalGroup(
            chatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1243, Short.MAX_VALUE)
        );
        chatPanelLayout.setVerticalGroup(
            chatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 835, Short.MAX_VALUE)
        );

        currentChatBodyPanel.setViewportView(chatPanel);

        currentChatTxt.setBackground(new java.awt.Color(102, 102, 102));
        currentChatTxt.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        currentChatTxt.setForeground(new java.awt.Color(255, 255, 255));
        currentChatTxt.setToolTipText("");
        currentChatTxt.setCaretColor(new java.awt.Color(255, 255, 255));
        currentChatTxt.setHighlighter(null);
        currentChatTxt.setOpaque(true);
        currentChatTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentChatTxtActionPerformed(evt);
            }
        });

        fileSelectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chatapplication/fileFolder.png"))); // NOI18N
        fileSelectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fileSelectButtonMouseClicked(evt);
            }
        });

        sendButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chatapplication/sendLogo.png"))); // NOI18N
        sendButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(currentChatHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(currentChatBodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1014, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(fileSelectButton)
                .addGap(18, 18, 18)
                .addComponent(currentChatTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sendButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(currentChatHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(currentChatBodyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 819, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(fileSelectButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(currentChatTxt))
                    .addComponent(sendButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new Color(47, 49, 54));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("New Chat");

        newChatTxt.setBackground(new java.awt.Color(102, 102, 102));
        newChatTxt.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        newChatTxt.setForeground(new java.awt.Color(255, 255, 255));
        newChatTxt.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        newChatTxt.setCaretColor(new java.awt.Color(255, 255, 255));
        newChatTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newChatTxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newChatSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(newChatTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newChatTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(newChatSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel8.setBackground(new Color(47, 49, 54));

        chatsLabel.setBackground(new Color(54, 57, 63));
        chatsLabel.setFont(new java.awt.Font("Segoe UI Historic", 1, 24)); // NOI18N
        chatsLabel.setForeground(new java.awt.Color(255, 255, 255));
        chatsLabel.setText("Chats");

        cancelToggleBtn.setBackground(new java.awt.Color(51, 102, 255));
        cancelToggleBtn.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cancelToggleBtn.setForeground(new java.awt.Color(255, 255, 255));
        cancelToggleBtn.setText("  Cancel");
        cancelToggleBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelToggleBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelToggleBtn.setOpaque(true);
        cancelToggleBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelToggleBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(chatsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelToggleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelToggleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chatsLabel))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        loggedInUserLabel.setBackground(new Color(47, 49, 54));
        loggedInUserLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        loggedInUserLabel.setForeground(new java.awt.Color(255, 255, 255));
        loggedInUserLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        loggedInUserLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chatapplication/senderChatMessageUserLogo.png"))); // NOI18N
        loggedInUserLabel.setText("You");

        logoutLabel.setBackground(new Color(47, 49, 54));
        logoutLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chatapplication/logoutLogo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(recentChatScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(loggedInUserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logoutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(4, 4, 4)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(recentChatScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loggedInUserLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                    .addComponent(logoutLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newChatTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newChatTxtActionPerformed
        String newChatPerson = newChatTxt.getText();
        chatsLabel.setText("Found Users");
        cancelToggleBtn.setVisible(true);
        if (!newChatPerson.equals("")) {
            serverOut.println(XMLHandler.createXML(userName, "server", "findUser", newChatPerson));
        }
    }//GEN-LAST:event_newChatTxtActionPerformed

    private void currentChatTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentChatTxtActionPerformed
        String message = currentChatTxt.getText();

        if (!message.equalsIgnoreCase("")) {
            JPanel messageContainer = new JPanel();
            messageContainer.setLayout(new BoxLayout(messageContainer, BoxLayout.X_AXIS));
            messageContainer.setAlignmentX(Component.LEFT_ALIGNMENT);
            messageContainer.setMaximumSize(new Dimension(chatPanel.getWidth(), 100)); // Ensure full horizontal expansion
            messageContainer.setBackground(new Color(54, 57, 63)); // Discord dark theme background

            JLabel avatarLabel = new JLabel(new ImageIcon(getClass().getResource("/chatapplication/senderChatMessageUserLogo.PNG")));

            // Replace with actual sender profile image path 
            avatarLabel.setPreferredSize(new Dimension(60, 60));
            avatarLabel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 10));

// Add left margin
            messageContainer.setBorder(BorderFactory.createEmptyBorder(0, 20, 0, 0)); // Add 10px left margin

// Message Content
            JPanel messageContentPanel = new JPanel();
            messageContentPanel.setLayout(new BoxLayout(messageContentPanel, BoxLayout.Y_AXIS));
            messageContentPanel.setBackground(new Color(54, 57, 63)); // Discord dark theme background
            messageContentPanel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5)); // Reduced padding
            messageContentPanel.setAlignmentX(Component.LEFT_ALIGNMENT);

// Username and Timestamp
            JLabel userLabel = new JLabel("You");
            userLabel.setFont(new Font("Segoe UI", Font.BOLD, 18));
            userLabel.setForeground(Color.GREEN);

            JLabel timeLabel = new JLabel(java.time.LocalTime.now().toString());
            timeLabel.setFont(new Font("Segoe UI", Font.PLAIN, 10));
            timeLabel.setForeground(Color.GRAY);

            JPanel headerPanel = new JPanel();
            headerPanel.setLayout(new BoxLayout(headerPanel, BoxLayout.X_AXIS));
            headerPanel.setBackground(new Color(54, 57, 63)); // Discord dark theme background
            headerPanel.add(userLabel);
            headerPanel.add(Box.createHorizontalStrut(5));
            headerPanel.add(timeLabel);
            headerPanel.setAlignmentX(Component.LEFT_ALIGNMENT);

// Message Text
            JTextArea messageArea = new JTextArea();
            messageArea.setText(message);
            messageArea.setWrapStyleWord(true);
            messageArea.setLineWrap(true);
            messageArea.setOpaque(true);
            messageArea.setForeground(Color.WHITE);
            messageArea.setBackground(new Color(54, 57, 63)); // Discord message bubble background
            messageArea.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
            messageArea.setFont(new Font("Segoe UI", Font.PLAIN, 18));
            messageArea.setEditable(false);
            messageArea.setAlignmentX(Component.LEFT_ALIGNMENT);
            messageArea.setMaximumSize(new Dimension(chatPanel.getWidth() - 60, 100));
            // Ensure full horizontal expansion

// Add header and message text to message content panel
            messageContentPanel.add(headerPanel);
            messageContentPanel.add(Box.createVerticalStrut(5));
            messageContentPanel.add(messageArea);

// Add avatar and message content to container
            messageContainer.add(avatarLabel);
            messageContainer.add(messageContentPanel);

// Add spacing below message
            chatPanel.add(messageContainer);
            chatPanel.add(Box.createRigidArea(new Dimension(0, 10)));

            chatPanel.revalidate();
            chatPanel.repaint();

            JScrollBar verticalScrollBar = currentChatBodyPanel.getVerticalScrollBar();
            SwingUtilities.invokeLater(() -> verticalScrollBar.setValue(verticalScrollBar.getMaximum()));

            currentChatTxt.setText("");
            currentChatTxt.requestFocus();

            String receiver = currentChatLabel.getText();
            serverOut.println(XMLHandler.createXML(userName, receiver, "sendMessage", message));

        }
    }//GEN-LAST:event_currentChatTxtActionPerformed

    private void recentChatLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recentChatLabelMouseClicked
        handleUI(evt);

    }//GEN-LAST:event_recentChatLabelMouseClicked

    private void cancelToggleBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelToggleBtnMouseClicked
        initializeClients();
        newChatTxt.setText("");
        chatsLabel.setText("Chats");
        cancelToggleBtn.setVisible(false);
    }//GEN-LAST:event_cancelToggleBtnMouseClicked

    private void sendButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendButtonMouseClicked
        String message = currentChatTxt.getText();

        if (!message.equalsIgnoreCase("")) {
            JPanel messageContainer = new JPanel();
            messageContainer.setLayout(new BoxLayout(messageContainer, BoxLayout.X_AXIS));
            messageContainer.setAlignmentX(Component.LEFT_ALIGNMENT);
            messageContainer.setMaximumSize(new Dimension(chatPanel.getWidth(), 100)); // Ensure full horizontal expansion
            messageContainer.setBackground(new Color(54, 57, 63)); // Discord dark theme background

            JLabel avatarLabel = new JLabel(new ImageIcon(getClass().getResource("/chatapplication/senderChatMessageUserLogo.PNG")));

            // Replace with actual sender profile image path 
            avatarLabel.setPreferredSize(new Dimension(60, 60));
            avatarLabel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 10));

// Add left margin
            messageContainer.setBorder(BorderFactory.createEmptyBorder(0, 20, 0, 0)); // Add 10px left margin

// Message Content
            JPanel messageContentPanel = new JPanel();
            messageContentPanel.setLayout(new BoxLayout(messageContentPanel, BoxLayout.Y_AXIS));
            messageContentPanel.setBackground(new Color(54, 57, 63)); // Discord dark theme background
            messageContentPanel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5)); // Reduced padding
            messageContentPanel.setAlignmentX(Component.LEFT_ALIGNMENT);

// Username and Timestamp
            JLabel userLabel = new JLabel("You");
            userLabel.setFont(new Font("Segoe UI", Font.BOLD, 18));

            userLabel.setForeground(Color.GREEN);

            JLabel timeLabel = new JLabel(java.time.LocalTime.now().toString());
            timeLabel.setFont(new Font("Segoe UI", Font.PLAIN, 10));
            timeLabel.setForeground(Color.GRAY);

            JPanel headerPanel = new JPanel();
            headerPanel.setLayout(new BoxLayout(headerPanel, BoxLayout.X_AXIS));
            headerPanel.setBackground(new Color(54, 57, 63)); // Discord dark theme background
            headerPanel.add(userLabel);
            headerPanel.add(Box.createHorizontalStrut(5));
            headerPanel.add(timeLabel);
            headerPanel.setAlignmentX(Component.LEFT_ALIGNMENT);

// Message Text
            JTextArea messageArea = new JTextArea();
            messageArea.setText(message);
            messageArea.setWrapStyleWord(true);
            messageArea.setLineWrap(true);
            messageArea.setOpaque(true);
            messageArea.setForeground(Color.WHITE);
            messageArea.setBackground(new Color(54, 57, 63)); // Discord message bubble background
            messageArea.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
            messageArea.setFont(new Font("Segoe UI", Font.PLAIN, 18));
            messageArea.setEditable(false);
            messageArea.setAlignmentX(Component.LEFT_ALIGNMENT);
            messageArea.setMaximumSize(new Dimension(chatPanel.getWidth() - 60, 100));
            // Ensure full horizontal expansion

// Add header and message text to message content panel
            messageContentPanel.add(headerPanel);
            messageContentPanel.add(Box.createVerticalStrut(5));
            messageContentPanel.add(messageArea);

// Add avatar and message content to container
            messageContainer.add(avatarLabel);
            messageContainer.add(messageContentPanel);

// Add spacing below message
            chatPanel.add(messageContainer);
            chatPanel.add(Box.createRigidArea(new Dimension(0, 10)));

            chatPanel.revalidate();
            chatPanel.repaint();

            JScrollBar verticalScrollBar = currentChatBodyPanel.getVerticalScrollBar();
            SwingUtilities.invokeLater(() -> verticalScrollBar.setValue(verticalScrollBar.getMaximum()));

            currentChatTxt.setText("");
            currentChatTxt.requestFocus();

            String receiver = currentChatLabel.getText();
            serverOut.println(XMLHandler.createXML(userName, receiver, "sendMessage", message));

        }
    }//GEN-LAST:event_sendButtonMouseClicked

    private void fileSelectButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileSelectButtonMouseClicked
        FileDialog fd = new FileDialog(this, "Select a file", FileDialog.LOAD);
        fd.setVisible(true);
        if (fd.getDirectory() != null || fd.getFile() != null) {

            sendFile(fd.getDirectory() + fd.getFile(), fd.getFile(), userName, currentChatLabel.getText());
        }
    }//GEN-LAST:event_fileSelectButtonMouseClicked

    public static void handleUI(java.awt.event.MouseEvent evt) {
        chatPanel.removeAll();
        chatPanel.revalidate();
        chatPanel.repaint();
        JLabel selectedLabel = (JLabel) evt.getComponent();
        currentChatLabel.setText(selectedLabel.getText());
        currentChatBodyPanel.setVisible(true);
        chatPanel.setVisible(true);
        currentChatHeader.setVisible(true);
        currentChatLabel.setVisible(true);
        currentChatTxt.setVisible(true);
        sendButton.setVisible(true);
        fileSelectButton.setVisible(true);

        String receiver = selectedLabel.getText();
        serverOut.println(XMLHandler.createXML(userName, "server", "retrieveChatHistory", receiver));
    }

    private boolean sendFile(String filePath, String fileName, String sender, String receiver) {
        File file = new File(filePath);

        int bufferSize = (int) Math.min(file.length(), 64 * 1024);
        byte[] buffer = new byte[bufferSize];
        serverOut.println(XMLHandler.createXML(userName, currentChatLabel.getText(), "sendFile", fileName));
        int totalBytes = 0;
        try {
            FileInputStream fis = new FileInputStream(file);
            DataOutputStream dos = new DataOutputStream(socket.getOutputStream());
            dos.writeLong(file.length());

            int bytesRead;

            while ((bytesRead = fis.read(buffer)) != -1) {
                dos.write(buffer, 0, bytesRead);
                totalBytes += bytesRead;
            }

            fis.close();

        } catch (IOException e) {

        }

        JPanel filePanel = new FilePanel(fileName, convertBytes(totalBytes));

        // Set alignment to left
        filePanel.setAlignmentX(Component.LEFT_ALIGNMENT);

        // Wrap filePanel in a container
        JPanel container = new JPanel();
        container.setLayout(new BoxLayout(container, BoxLayout.X_AXIS));
        container.setBackground(new Color(54, 57, 63)); // Match chatPanel background
        container.setAlignmentX(Component.LEFT_ALIGNMENT);
        container.setMaximumSize(new Dimension(chatPanel.getWidth(), filePanel.getPreferredSize().height + 20)); // Ensure it only takes up the necessary vertical space

        // Add left margin
        container.setBorder(BorderFactory.createEmptyBorder(0, 20, 0, 0)); // Add 20px left margin

        // User Avatar
        JLabel avatarLabel = new JLabel(new ImageIcon(getClass().getResource("/chatapplication/chatMessageUserLogo.PNG"))); // Replace with actual sender profile image path
        avatarLabel.setPreferredSize(new Dimension(50, 50));
        avatarLabel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 10));

        // File Content Panel
        JPanel fileContentPanel = new JPanel();
        fileContentPanel.setLayout(new BoxLayout(fileContentPanel, BoxLayout.Y_AXIS));
        fileContentPanel.setBackground(new Color(54, 57, 63)); // Discord dark theme background
        fileContentPanel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5)); // Reduced padding
        fileContentPanel.setAlignmentX(Component.LEFT_ALIGNMENT);

        // File Name and Size
        JLabel fileNameLabel = new JLabel(fileName);
        fileNameLabel.setFont(new Font("Segoe UI", Font.BOLD, 18));
        fileNameLabel.setForeground(Color.WHITE);

        JPanel headerPanel = new JPanel();
        headerPanel.setLayout(new BoxLayout(headerPanel, BoxLayout.X_AXIS));
        headerPanel.setBackground(new Color(54, 57, 63)); // Discord dark theme background
        headerPanel.add(fileNameLabel);
        headerPanel.add(Box.createHorizontalStrut(5));
        headerPanel.setAlignmentX(Component.LEFT_ALIGNMENT);

        // Add header to file content panel
        fileContentPanel.add(headerPanel);

        // Add file panel to file content panel
        fileContentPanel.add(filePanel);

        // Add avatar and file content to container
        container.add(avatarLabel);
        container.add(fileContentPanel);

        // Add spacing below the panel
        chatPanel.add(container);
        chatPanel.add(Box.createRigidArea(new Dimension(0, 10)));

        // Refresh chat panel
        chatPanel.revalidate();
        chatPanel.repaint();

        JScrollBar verticalScrollBar = currentChatBodyPanel.getVerticalScrollBar();
        SwingUtilities.invokeLater(() -> verticalScrollBar.setValue(verticalScrollBar.getMaximum()));

        return true;
    }

    public static void sendReceiveFileCommand(String fileName) {
        serverOut.println(XMLHandler.createXML(userName, "server", "receiveFile", fileName));
    }

    private static Socket socket;
    static String userName;
    private static String email;
    private static PrintWriter serverOut;
    static HashSet<String> contactList;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cancelToggleBtn;
    public static javax.swing.JPanel chatPanel;
    private javax.swing.JLabel chatsLabel;
    public static javax.swing.JScrollPane currentChatBodyPanel;
    public static javax.swing.JPanel currentChatHeader;
    public static javax.swing.JLabel currentChatLabel;
    public static javax.swing.JTextField currentChatTxt;
    public static javax.swing.JLabel fileSelectButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel loggedInUserLabel;
    private javax.swing.JLabel logoutLabel;
    private javax.swing.JSeparator newChatSeparator;
    private javax.swing.JTextField newChatTxt;
    private javax.swing.JLabel recentChatLabel;
    public static javax.swing.JPanel recentChatMainPanel;
    private javax.swing.JPanel recentChatPanel;
    private javax.swing.JScrollPane recentChatScrollPane;
    public static javax.swing.JLabel sendButton;
    // End of variables declaration//GEN-END:variables

}

class ServerListener implements Runnable {

    private final Socket socket;
    private final JPanel chatPanel;
    private final JPanel recentChatMainPanel;
    private final JScrollPane recentChatScrollPane;
    private final JFrame chatScreen;
    private final JScrollPane currentChatBodyPanel;

    public ServerListener(Socket socket, JPanel chatPanel, JPanel recentChatMainPanel, JScrollPane recentChatScrollPane, ChatScreen chatScreen, JScrollPane currentChatBodyPanel) {
        this.socket = socket;
        this.chatPanel = chatPanel;
        this.recentChatMainPanel = recentChatMainPanel;
        this.recentChatScrollPane = recentChatScrollPane;
        this.chatScreen = chatScreen;
        this.currentChatBodyPanel = currentChatBodyPanel;
    }

    @Override
    public void run() {
        try (BufferedReader serverIn = new BufferedReader(new InputStreamReader(socket.getInputStream()));) {
            DataInputStream dis = new DataInputStream(socket.getInputStream());

            String incomingMessage;

            while ((incomingMessage = serverIn.readLine()) != null) {

                if (incomingMessage.startsWith("[")) {
                    recentChatMainPanel.removeAll();

                    updateUserList(incomingMessage);

                } else if (incomingMessage.startsWith("<message>")) {

                    displayChatMessage(incomingMessage);
                } else if (incomingMessage.startsWith("<file>")) {

                    receiveFile(incomingMessage);
                } else if (incomingMessage.startsWith("<fileData>")) {
                    downloadFile(incomingMessage, dis);
                }
            }
        } catch (IOException e) {

        }
    }

    private void updateUserList(String userListMessage) {

        String userString = "(\\w+)";
        Pattern userPattern = Pattern.compile(userString);
        Matcher userMatcher = userPattern.matcher(userListMessage);

        while (userMatcher.find()) {
            String userName = userMatcher.group(1);

            ChatScreen.contactList.add(userName);
            addRecentChat(userName, "/chatapplication/chatMessageUserLogo.PNG");

        }

        recentChatMainPanel.revalidate();
        recentChatMainPanel.repaint();
    }

    private void displayChatMessage(String message) {

        String messageContent = XMLHandler.extractTag(message, "content");

        String messageType = XMLHandler.extractTag(message, "contentType");
        System.out.println(messageType);
        if (messageType.equalsIgnoreCase("file")) {
            String fileDetails[] = messageContent.split("_%_");
            System.out.println("received file name " + fileDetails[0]);
            displayFile(fileDetails[0], Long.parseLong(fileDetails[1]));
            return;
        }

        String sender;

        if (ChatScreen.userName.equals(XMLHandler.extractTag(message, "from"))) {
            sender = "You";
        } else {
            sender = XMLHandler.extractTag(message, "from");
        }

        if (!sender.equalsIgnoreCase("You") && ChatScreen.contactList.add(sender)) {
            addRecentChat(sender, "/chatapplication/chatMessageUserLogo.PNG");
        }

        if (ChatScreen.currentChatLabel.getText().equals(sender) || sender.equalsIgnoreCase("You")) {
            if (messageContent != null) {// Create a container panel for the message
                JPanel messageContainer = new JPanel();
                messageContainer.setLayout(new BoxLayout(messageContainer, BoxLayout.X_AXIS));
                messageContainer.setAlignmentX(Component.LEFT_ALIGNMENT);
                messageContainer.setMaximumSize(new Dimension(chatPanel.getWidth(), 100)); // Ensure full horizontal expansion
                messageContainer.setBackground(new Color(54, 57, 63)); // Discord dark theme background

                JLabel avatarLabel;
                if (sender.equalsIgnoreCase("You")) {
                    avatarLabel = new JLabel(new ImageIcon(getClass().getResource("/chatapplication/senderChatMessageUserLogo.PNG")));
                } else {
                    avatarLabel = new JLabel(new ImageIcon(getClass().getResource("/chatapplication/chatMessageUserLogo.PNG")));
                }
                // Replace with actual sender profile image path 
                avatarLabel.setPreferredSize(new Dimension(60, 60));
                avatarLabel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 10));

// Add left margin
                messageContainer.setBorder(BorderFactory.createEmptyBorder(0, 20, 0, 0)); // Add 10px left margin

// Message Content
                JPanel messageContentPanel = new JPanel();
                messageContentPanel.setLayout(new BoxLayout(messageContentPanel, BoxLayout.Y_AXIS));
                messageContentPanel.setBackground(new Color(54, 57, 63)); // Discord dark theme background
                messageContentPanel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5)); // Reduced padding
                messageContentPanel.setAlignmentX(Component.LEFT_ALIGNMENT);

// Username and Timestamp
                JLabel userLabel = new JLabel(sender);
                userLabel.setFont(new Font("Segoe UI", Font.BOLD, 18));

                if (sender.equalsIgnoreCase("You")) {
                    userLabel.setForeground(Color.GREEN);
                } else {
                    userLabel.setForeground(new Color(114, 137, 218));
                }

                JLabel timeLabel = new JLabel(java.time.LocalTime.now().toString());
                timeLabel.setFont(new Font("Segoe UI", Font.PLAIN, 10));
                timeLabel.setForeground(Color.GRAY);

                JPanel headerPanel = new JPanel();
                headerPanel.setLayout(new BoxLayout(headerPanel, BoxLayout.X_AXIS));
                headerPanel.setBackground(new Color(54, 57, 63)); // Discord dark theme background
                headerPanel.add(userLabel);
                headerPanel.add(Box.createHorizontalStrut(5));
                headerPanel.add(timeLabel);
                headerPanel.setAlignmentX(Component.LEFT_ALIGNMENT);

// Message Text
                JTextArea messageArea = new JTextArea();
                messageArea.setText(messageContent);
                messageArea.setWrapStyleWord(true);
                messageArea.setLineWrap(true);
                messageArea.setOpaque(true);
                messageArea.setForeground(Color.WHITE);
                messageArea.setBackground(new Color(54, 57, 63)); // Discord message bubble background
                messageArea.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
                messageArea.setFont(new Font("Segoe UI", Font.PLAIN, 18));
                messageArea.setEditable(false);
                messageArea.setAlignmentX(Component.LEFT_ALIGNMENT);
                messageArea.setMaximumSize(new Dimension(chatPanel.getWidth() - 60, 100));
                // Ensure full horizontal expansion

// Add header and message text to message content panel
                messageContentPanel.add(headerPanel);
                messageContentPanel.add(Box.createVerticalStrut(5));
                messageContentPanel.add(messageArea);

// Add avatar and message content to container
                messageContainer.add(avatarLabel);
                messageContainer.add(messageContentPanel);

// Add spacing below message
                chatPanel.add(messageContainer);
                chatPanel.add(Box.createRigidArea(new Dimension(0, 10)));

// Refresh chat panel
                chatPanel.revalidate();
                chatPanel.repaint();

                JScrollBar verticalScrollBar = currentChatBodyPanel.getVerticalScrollBar();
                SwingUtilities.invokeLater(() -> verticalScrollBar.setValue(verticalScrollBar.getMaximum()));

            }
        }
    }

    private void addRecentChat(String userName, String iconPath) {
        if (!(recentChatMainPanel.getLayout() instanceof BoxLayout)) {
            recentChatMainPanel.setLayout(new BoxLayout(recentChatMainPanel, BoxLayout.Y_AXIS));
        }

        JPanel recentChatPanel = new JPanel();
        recentChatPanel.setBackground(new java.awt.Color(47, 49, 54)); // Discord dark theme background
        recentChatPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(54, 57, 63)));
        recentChatPanel.setMaximumSize(new Dimension(397, 60)); // Set consistent size for the panel
        recentChatPanel.setLayout(new BorderLayout()); // Use BorderLayout to make the label fill the entire panel

// Recent Chat Label
        JLabel recentChatLabel = new JLabel();
        recentChatLabel.setFont(new java.awt.Font("Segoe UI", Font.BOLD, 18)); // Set font
        recentChatLabel.setHorizontalAlignment(SwingConstants.LEFT);
        recentChatLabel.setText(userName);
        recentChatLabel.setForeground(Color.white);
        recentChatLabel.setCursor(new Cursor(Cursor.HAND_CURSOR));

// Add left padding to the label
        recentChatLabel.setBorder(BorderFactory.createEmptyBorder(0, 18, 0, 0)); // Add 18px left padding

        if (iconPath != null) {
            recentChatLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(iconPath)));
        }

        recentChatLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ChatScreen.handleUI(evt);
            }
        });

        recentChatPanel.add(recentChatLabel, BorderLayout.CENTER);

        recentChatMainPanel.add(Box.createVerticalStrut(10));
        recentChatMainPanel.add(recentChatPanel);

        recentChatMainPanel.revalidate();
        recentChatMainPanel.repaint();

    }

    private void receiveFile(String incomingMessage) {
        String fileName = XMLHandler.extractTag(incomingMessage, "name");
        String size = XMLHandler.extractTag(incomingMessage, "size");

        displayFile(fileName, Long.parseLong(size));

        JScrollBar verticalScrollBar = currentChatBodyPanel.getVerticalScrollBar();
        SwingUtilities.invokeLater(() -> verticalScrollBar.setValue(verticalScrollBar.getMaximum()));

    }

    private void downloadFile(String incomingMessage, DataInputStream dis) {
        String fileName = XMLHandler.extractTag(incomingMessage, "name");
        int bytes = 0;
        try {

            File f = new File("received_" + fileName);

            if (!f.exists()) {
                f.createNewFile();
            }

            FileOutputStream fos = new FileOutputStream(f);

            long size = dis.readLong();
            System.out.println("Receieved file size : " + size);
            long totalBytes = 0;
            byte b[] = new byte[(int) Math.min(size, 64 * 1024)];

            while (size > 0
                    && ((bytes = dis.read(b, 0, (int) Math.min(size, b.length))) != -1)) {
                fos.write(b, 0, bytes);
                size -= bytes;
                totalBytes += bytes;

            }

//            displayFile();
            fos.close();

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void displayFile(String fileName, Long size) {
        // Create the FilePanel
        JPanel filePanel = new FilePanel(fileName, convertBytes(size));

        // Set alignment to left
        filePanel.setAlignmentX(Component.LEFT_ALIGNMENT);

        // Wrap filePanel in a container
        JPanel container = new JPanel();
        container.setLayout(new BoxLayout(container, BoxLayout.X_AXIS));
        container.setBackground(new Color(54, 57, 63)); // Match chatPanel background
        container.setAlignmentX(Component.LEFT_ALIGNMENT);
        container.setMaximumSize(new Dimension(chatPanel.getWidth(), filePanel.getPreferredSize().height + 20)); // Ensure it only takes up the necessary vertical space

        // Add left margin
        container.setBorder(BorderFactory.createEmptyBorder(0, 20, 0, 0)); // Add 20px left margin

        // User Avatar
        JLabel avatarLabel = new JLabel(new ImageIcon(getClass().getResource("/chatapplication/chatMessageUserLogo.PNG"))); // Replace with actual sender profile image path
        avatarLabel.setPreferredSize(new Dimension(50, 50));
        avatarLabel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 10));

        // File Content Panel
        JPanel fileContentPanel = new JPanel();
        fileContentPanel.setLayout(new BoxLayout(fileContentPanel, BoxLayout.Y_AXIS));
        fileContentPanel.setBackground(new Color(54, 57, 63)); // Discord dark theme background
        fileContentPanel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5)); // Reduced padding
        fileContentPanel.setAlignmentX(Component.LEFT_ALIGNMENT);

        // File Name and Size
        JLabel fileNameLabel = new JLabel(fileName);
        fileNameLabel.setFont(new Font("Segoe UI", Font.BOLD, 18));
        fileNameLabel.setForeground(Color.WHITE);

        JPanel headerPanel = new JPanel();
        headerPanel.setLayout(new BoxLayout(headerPanel, BoxLayout.X_AXIS));
        headerPanel.setBackground(new Color(54, 57, 63)); // Discord dark theme background
        headerPanel.add(fileNameLabel);
        headerPanel.add(Box.createHorizontalStrut(5));
        headerPanel.setAlignmentX(Component.LEFT_ALIGNMENT);

        // Add header to file content panel
        fileContentPanel.add(headerPanel);

        // Add file panel to file content panel
        fileContentPanel.add(filePanel);

        // Add avatar and file content to container
        container.add(avatarLabel);
        container.add(fileContentPanel);

        // Add spacing below the panel
        chatPanel.add(container);
        chatPanel.add(Box.createRigidArea(new Dimension(0, 10)));

        // Refresh chat panel
        chatPanel.revalidate();
        chatPanel.repaint();

        JScrollBar verticalScrollBar = currentChatBodyPanel.getVerticalScrollBar();
        SwingUtilities.invokeLater(() -> verticalScrollBar.setValue(verticalScrollBar.getMaximum()));
    }

    public static String convertBytes(long bytes) {
        String[] units = {"B", "KB", "MB", "GB", "TB", "PB", "EB"};
        int unitIndex = 0;
        double value = bytes;
        while (value >= 1024 && unitIndex < units.length - 1) {
            value /= 1024;
            unitIndex++;
        }
        return String.format("%.1f %s", value, units[unitIndex]);
    }

}
